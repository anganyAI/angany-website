name: Update API Documentation

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering
  push:
    paths:
      - 'scripts/update-openapi-specs.js'
      - '.github/workflows/update-api-docs.yml'
  
jobs:
  update-docs:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false
          
      - name: Get pnpm store directory
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Update OpenAPI specs
        run: pnpm run update-api-docs
        env:
          # Add your API URLs here as secrets in GitHub
          ANGANY_AUTH_API_URL: ${{ secrets.ANGANY_AUTH_API_URL }}
          ANGANY_CONFIG_API_URL: ${{ secrets.ANGANY_CONFIG_API_URL }}
          ANGANY_APP_DATA_API_URL: ${{ secrets.ANGANY_APP_DATA_API_URL }}
          NODE_ENV: production
          
      - name: Generate API documentation
        run: pnpm run generate-api-docs
        
      - name: Check for changes
        id: verify-changed-files
        run: |
          if [ -n "$(git status --porcelain)" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Files changed:"
            git status --porcelain
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No files changed"
          fi
          
      - name: Commit and push changes
        if: steps.verify-changed-files.outputs.changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "docs: Update API documentation [automated]
          
          - Updated OpenAPI specifications
          - Regenerated API documentation pages
          - Timestamp: $(date -u)"
          git push
          
      - name: Create PR for major changes (optional)
        if: steps.verify-changed-files.outputs.changed == 'true' && github.event_name == 'schedule'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "docs: Update API documentation [automated]"
          title: "ðŸ¤– Automated API Documentation Update"
          body: |
            ## ðŸ”„ Automated API Documentation Update
            
            This PR contains automatically updated API documentation from our OpenAPI specifications.
            
            ### Changes:
            - Updated OpenAPI specifications from live APIs
            - Regenerated documentation pages
            - Updated API schemas and examples
            
            ### Review Checklist:
            - [ ] Verify API specification changes are accurate
            - [ ] Check for any breaking changes in API contracts
            - [ ] Confirm documentation formatting is correct
            - [ ] Test links and navigation
            
            **Note**: This is an automated update. Please review carefully before merging.
            
            ---
            *Generated by GitHub Actions on $(date -u)*
          branch: automated/api-docs-update
          delete-branch: true
          draft: false
          
      - name: Deploy to GitHub Pages (if on main branch)
        if: github.ref == 'refs/heads/main' && steps.verify-changed-files.outputs.changed == 'true'
        run: |
          pnpm run build
          # Add additional deployment steps here if needed 